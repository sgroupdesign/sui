import{r as n,o as a,c as s,d as e,w as l,a as o,b as t,e as i}from"./app.60fc63aa.js";const p='{"title":"Layout","description":"","frontmatter":{},"headers":[{"level":2,"title":"Breakpoints","slug":"breakpoints"},{"level":3,"title":"Desktop-first and single-breakpoint","slug":"desktop-first-and-single-breakpoint"},{"level":2,"title":"Containers","slug":"containers"},{"level":2,"title":"Flexbox Grid","slug":"flexbox-grid"},{"level":2,"title":"CSS Grid","slug":"css-grid"}],"relativePath":"framework/layout.md","lastUpdated":1628694847524}',d={},r=o('<h1>Layout</h1><h2 id="breakpoints"><a class="header-anchor" href="#breakpoints" aria-hidden="true">#</a> Breakpoints</h2><p>Our breakpoints are largely modelled after Tailwind&#39;s <a href="https://tailwindcss.com/docs/breakpoints" target="_blank" rel="noopener noreferrer">breakpoints</a>, and are mobile-first. Namely, we&#39;ve added a <code>xs</code> breakpoint for even more control.</p><div class="language-js"><pre><code>screens<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">&#39;xs&#39;</span><span class="token operator">:</span> <span class="token string">&#39;520px&#39;</span><span class="token punctuation">,</span>   <span class="token comment">// =&gt; @media (min-width: 520px) { ... }</span>\n    <span class="token string">&#39;sm&#39;</span><span class="token operator">:</span> <span class="token string">&#39;640px&#39;</span><span class="token punctuation">,</span>   <span class="token comment">// =&gt; @media (min-width: 640px) { ... }</span>\n    <span class="token string">&#39;md&#39;</span><span class="token operator">:</span> <span class="token string">&#39;768px&#39;</span><span class="token punctuation">,</span>   <span class="token comment">// =&gt; @media (min-width: 768px) { ... }</span>\n    <span class="token string">&#39;lg&#39;</span><span class="token operator">:</span> <span class="token string">&#39;1024px&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// =&gt; @media (min-width: 1024px) { ... }</span>\n    <span class="token string">&#39;xl&#39;</span><span class="token operator">:</span> <span class="token string">&#39;1280px&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// =&gt; @media (min-width: 1280px) { ... }</span>\n    <span class="token string">&#39;2xl&#39;</span><span class="token operator">:</span> <span class="token string">&#39;1536px&#39;</span><span class="token punctuation">,</span> <span class="token comment">// =&gt; @media (min-width: 1536px) { ... }</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',4),c=t("pre",null,[t("code",null,'<div class="bg-purple-500 xs:bg-red-500 sm:bg-yellow-500 md:bg-primary-500 lg:bg-teriary-500 xl:bg-orange-500 2xl:bg-green-500">\n    ...\n</div>\n')],-1),u=t("h3",{id:"desktop-first-and-single-breakpoint"},[t("a",{class:"header-anchor",href:"#desktop-first-and-single-breakpoint","aria-hidden":"true"},"#"),i(" Desktop-first and single-breakpoint")],-1),v=t("p",null,"We include some additional utilities for breakpoints:",-1),m=t("pre",null,[t("code",null,'<div class="bg-purple-500 to-xs:bg-red-500 to-sm:bg-yellow-500 to-md:bg-primary-500 to-lg:bg-teriary-500 to-xl:bg-orange-500 to-2xl:bg-green-500">\n    ...\n</div>\n')],-1),g=t("pre",null,[t("code",null,'<div class="bg-purple-500 md-only:bg-green-500">\n    ...\n</div>\n')],-1),k=o('<h2 id="containers"><a class="header-anchor" href="#containers" aria-hidden="true">#</a> Containers</h2><p>We use the <a href="https://tailwindcss.com/docs/container" target="_blank" rel="noopener noreferrer">Tailwind</a> container for a fixed-width container that &quot;snaps&quot; to each breakpoint. This is in contrast to a &quot;fluid&quot; container that stretches to the full width of the outer container. We find in practice developing to specific breakpoints to be far more efficient than ensuring layout looks perfect at every pixel increment ðŸ˜….</p><div class="language-js"><pre><code>container<span class="token operator">:</span> <span class="token punctuation">{</span>\n    center<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    padding<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token constant">DEFAULT</span><span class="token operator">:</span> <span class="token string">&#39;1rem&#39;</span><span class="token punctuation">,</span>\n        md<span class="token operator">:</span> <span class="token string">&#39;2rem&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre></div><p>Our default setup is to auto-center the container, providing a <code>1rem</code> x-padding and a <code>2rem</code> padding after the <code>md</code> breakpoint. Feel free to tailor this to your needs for each project.</p>',4),h=t("pre",null,[t("code",null,'<div class="container">\n    ...\n</div>\n')],-1),f=t("p",null,"You can also override the padding or any other classes at the template level.",-1),x=t("pre",null,[t("code",null,'<div class="container px-20">\n    ...\n</div>\n')],-1),b=t("p",null,[i("If you want to use a fluid container, simply omit the "),t("code",null,".container"),i(" class and roll your own classes.")],-1),w=t("pre",null,[t("code",null,'<div class="w-full mx-auto px-4 md:px-8">\n    ...\n</div>\n')],-1),_=t("h2",{id:"flexbox-grid"},[t("a",{class:"header-anchor",href:"#flexbox-grid","aria-hidden":"true"},"#"),i(" Flexbox Grid")],-1),y=t("p",null,[i("Our grid system is a tiny layer of flexbox utilities, combined with Tailwind's "),t("a",{href:"https://tailwindcss.com/docs/width",target:"_blank",rel:"noopener noreferrer"},"width classes"),i(".")],-1),T=t("pre",null,[t("code",null,'<div class="container">\n    <div class="row">\n        <div class="col sm:w-1/3">\n            Column 1\n        </div>\n\n        <div class="col sm:w-1/3">\n            Column 2\n        </div>\n\n        <div class="col sm:w-1/3">\n            Column 3\n        </div>\n    </div>\n</div>\n')],-1),C=t("pre",null,[t("code",null,'<div class="container">\n    <div class="row row-small">\n        <div class="col sm:w-1/3">\n            Column 1\n        </div>\n\n        <div class="col sm:w-1/3">\n            Column 2\n        </div>\n\n        <div class="col sm:w-1/3">\n            Column 3\n        </div>\n    </div>\n</div>\n')],-1),S=t("p",null,"As usual, you can override padding and other classes at the template level as well.",-1),A=t("pre",null,[t("code",null,'<div class="container">\n    <div class="row -mx-0">\n        <div class="col sm:w-1/3 px-0">\n            Column 1\n        </div>\n\n        <div class="col sm:w-1/3 px-0">\n            Column 2\n        </div>\n\n        <div class="col sm:w-1/3 px-0">\n            Column 3\n        </div>\n    </div>\n</div>\n')],-1),D=t("p",null,"You can also completely use Tailwind classes to achieve the same result.",-1),G=t("pre",null,[t("code",null,'<div class="container">\n    <div class="flex flex-wrap -mx-4">\n        <div class="w-full px-4 xs:w-1/2">\n            Column 1\n        </div>\n\n        <div class="w-full px-4 xs:w-1/2">\n            Column 2\n        </div>\n    </div>\n</div>\n')],-1),F=o('<p>Our <code>.row</code> and <code>.col</code> classes are simple shorthand which are unopinionated. The benefits are:</p><ul><li>Auto full-width on mobile</li><li>Sensible defaults for padding (with small/no padding option)</li><li>Not having to write <code>flex flex-wrap</code> all the time.</li></ul><div class="language-scss"><pre><code><span class="token selector">.row </span><span class="token punctuation">{</span>\n    <span class="token atrule"><span class="token rule">@apply</span> flex flex-wrap -mx-4<span class="token punctuation">;</span>\n\n    &amp;.row-small</span> <span class="token punctuation">{</span>\n        <span class="token atrule"><span class="token rule">@apply</span> -mx-2<span class="token punctuation">;</span>\n\n        <span class="token operator">&gt;</span> .col</span> <span class="token punctuation">{</span>\n            <span class="token atrule"><span class="token rule">@apply</span> px-2<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n.col</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Full width by default</span>\n    @apply px-4 w-full<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="css-grid"><a class="header-anchor" href="#css-grid" aria-hidden="true">#</a> CSS Grid</h2><p>Another alternative to using the Flexbox-based grid is to use CSS Grid&#39;s, made easier with Tailwind&#39;s <a href="https://tailwindcss.com/docs/grid-template-columns" target="_blank" rel="noopener noreferrer">grid classes</a>.</p>',5),I=t("pre",null,[t("code",null,'<div class="container">\n    <div class="grid grid-cols-3 gap-x-8 gap-y-4">\n        <div>1</div>\n        <div>2</div>\n        <div>3</div>\n        <div>4</div>\n        <div>5</div>\n        <div>6</div>\n    </div>\n</div>\n')],-1),P=t("p",null,"The grid utilities make it super-simple to construct gaps between columns and rows, having columns span multiple rows and more.",-1),N=t("pre",null,[t("code",null,'<div class="container">\n    <div class="grid grid-cols-3 gap-4">\n        <div>1</div>\n        <div>2</div>\n        <div>3</div>\n        <div class="col-span-2">4</div>\n        <div>5</div>\n        <div class="col-span-3">6</div>\n    </div>\n</div>\n')],-1),V=t("pre",null,[t("code",null,'<div class="container">\n    <div class="grid grid-cols-6 gap-4">\n        <div class="col-start-2 col-span-4">1</div>\n        <div class="col-start-1 col-end-3">2</div>\n        <div class="col-end-7 col-span-2">3</div>\n        <div class="col-start-1 col-end-7">4</div>\n    </div>\n</div>\n')],-1),B=t("p",null,"You can also add some non-card-like grids, like the layout for an application with a sidebar.",-1),j=t("pre",null,[t("code",null,'<div class="container">\n    <div class="grid grid-rows-3 grid-flow-col gap-4">\n        <div class="row-span-3">1</div>\n        <div class="col-span-2">2</div>\n        <div class="row-span-2 col-span-2">3</div>\n    </div>\n</div>\n')],-1);d.render=function(o,t,i,p,d,q){const E=n("code-preview");return a(),s("div",null,[r,e(E,{"body-id":"breakpoint-example",heading:"Breakpoints - Mobile-first"},{default:l((()=>[c])),_:1}),u,v,e(E,{"body-id":"breakpoint-example",heading:"Breakpoints - Desktop-first"},{default:l((()=>[m])),_:1}),e(E,{"body-id":"breakpoint-example",heading:"Breakpoints - md-only"},{default:l((()=>[g])),_:1}),k,e(E,{"body-id":"container-example",heading:"Default container"},{default:l((()=>[h])),_:1}),f,e(E,{"body-id":"container-example",heading:"Custom classes"},{default:l((()=>[x])),_:1}),b,e(E,{"body-id":"container-example",heading:"Fluid container"},{default:l((()=>[w])),_:1}),_,y,e(E,{"body-id":"col-example",heading:"Default columns"},{default:l((()=>[T])),_:1}),e(E,{"body-id":"col-example",heading:"Small gutters"},{default:l((()=>[C])),_:1}),S,e(E,{"body-id":"col-example",heading:"No gutters"},{default:l((()=>[A])),_:1}),D,e(E,{"body-id":"col-example",heading:"Tailwind classes"},{default:l((()=>[G])),_:1}),F,e(E,{"body-id":"col-example",heading:"Grid"},{default:l((()=>[I])),_:1}),P,e(E,{"body-id":"col-example",heading:"Grid cols"},{default:l((()=>[N])),_:1}),e(E,{"body-id":"col-example",heading:"Grid cols - start/end"},{default:l((()=>[V])),_:1}),B,e(E,{"body-id":"col-example",heading:"Grid sidebar"},{default:l((()=>[j])),_:1})])};export{p as __pageData,d as default};
