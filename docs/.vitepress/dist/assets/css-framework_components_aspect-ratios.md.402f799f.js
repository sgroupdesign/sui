import{r as a,o as s,c as e,b as n,w as t,a as o,d as p,e as c}from"./app.d3da16a8.js";const i='{"title":"Aspect Ratios","description":"","frontmatter":{},"headers":[{"level":2,"title":"Images","slug":"images"},{"level":2,"title":"Background images","slug":"background-images"},{"level":2,"title":"Videos","slug":"videos"},{"level":2,"title":"Standard ratios","slug":"standard-ratios"},{"level":2,"title":"Responsive","slug":"responsive"},{"level":3,"title":"Configuration","slug":"configuration"}],"relativePath":"css-framework/components/aspect-ratios.md","lastUpdated":1629439914664}',l={},r=o('<h1>Aspect Ratios</h1><p><a href="https://github.com/sgroupdesign/sui-vue/blob/main/packages/tailwind-plugins/src/aspect-ratios" target="_blank" rel="noopener noreferrer"><code>@sui/tailwind-plugins/aspect-ratios</code></a></p><p>Use the ratio helpers to manage the aspect ratios images, background images and external content like <code>&lt;iframe&gt;</code>s and <code>&lt;video&gt;</code>s.</p><p>You can use any values to determine the width and height ratio, up to <code>21</code>. Use the <code>.aspect-2x4</code> representing the width by height value.</p><h2 id="images"><a class="header-anchor" href="#images" aria-hidden="true">#</a> Images</h2><p>Because <code>&lt;img&gt;</code> elements don&#39;t support the <code>::before</code> pseudo element, we require a wrapper element.</p>',6),d=p("pre",null,[p("code",null,'<div class="aspect aspect-21x6">\n    <img src="https://images.unsplash.com/photo-1468276311594-df7cb65d8df6?auto=format&fit=crop&w=1400&q=80">\n</div>\n')],-1),u=p("p",null,[c("You'll notice that the image has been squished to the aspect ratio. You can change this be adding "),p("code",null,"object-*"),c(" classes to the "),p("code",null,"<img>"),c(" element.")],-1),h=p("pre",null,[p("code",null,'<div class="aspect aspect-21x6">\n    <img src="https://images.unsplash.com/photo-1468276311594-df7cb65d8df6?auto=format&fit=crop&w=1400&q=80" class="object-center object-cover">\n</div>\n')],-1),g=p("h2",{id:"background-images"},[p("a",{class:"header-anchor",href:"#background-images","aria-hidden":"true"},"#"),c(" Background images")],-1),m=p("p",null,[c("Background images should use the "),p("code",null,"img-*"),c(" helper classes.")],-1),f=p("pre",null,[p("code",null,'<div class="img-cover aspect aspect-21x4" style="background-image: url(\'https://images.unsplash.com/photo-1468276311594-df7cb65d8df6?auto=format&fit=crop&w=1400&q=80\');"></div>\n')],-1),k=p("h2",{id:"videos"},[p("a",{class:"header-anchor",href:"#videos","aria-hidden":"true"},"#"),c(" Videos")],-1),v=p("pre",null,[p("code",null,'<div class="aspect aspect-16x9">\n    <iframe src="https://www.youtube.com/embed/3NVqBs6xYJg" allowfullscreen></iframe>\n</div>\n')],-1),b=p("h2",{id:"standard-ratios"},[p("a",{class:"header-anchor",href:"#standard-ratios","aria-hidden":"true"},"#"),c(" Standard ratios")],-1),_=p("p",null,"You can technically craft any ratio combination you like, but some industry-standard ones are:",-1),w=p("pre",null,[p("code",null,'<div class="img-cover aspect aspect-21x9" style="background-image: url(\'https://images.unsplash.com/photo-1468276311594-df7cb65d8df6?auto=format&fit=crop&w=1400&q=80\');"></div>\n')],-1),x=p("pre",null,[p("code",null,'<div class="img-cover aspect aspect-16x9" style="background-image: url(\'https://images.unsplash.com/photo-1468276311594-df7cb65d8df6?auto=format&fit=crop&w=1400&q=80\');"></div>\n')],-1),y=p("pre",null,[p("code",null,'<div class="img-cover aspect aspect-4x3" style="background-image: url(\'https://images.unsplash.com/photo-1468276311594-df7cb65d8df6?auto=format&fit=crop&w=1400&q=80\');"></div>\n')],-1),q=p("pre",null,[p("code",null,'<div class="img-cover aspect aspect-1x1" style="background-image: url(\'https://images.unsplash.com/photo-1468276311594-df7cb65d8df6?auto=format&fit=crop&w=1400&q=80\');"></div>\n')],-1),T=p("h2",{id:"responsive"},[p("a",{class:"header-anchor",href:"#responsive","aria-hidden":"true"},"#"),c(" Responsive")],-1),j=p("p",null,[c("You might want to have a set ratio for images on desktop and tablet, but want to un-constrain media when at mobile. You can use "),p("code",null,"aspect-none"),c(" at breakpoints to cater for this.")],-1),A=p("pre",null,[p("code",null,'<div class="aspect-none md:aspect md:aspect-21x4">\n    <img src="https://images.unsplash.com/photo-1468276311594-df7cb65d8df6?auto=format&fit=crop&w=1400&q=80" class="object-center object-cover">\n</div>\n')],-1),I=p("pre",null,[p("code",null,'<div class="aspect aspect-21x4 md:aspect-none">\n    <img src="https://images.unsplash.com/photo-1468276311594-df7cb65d8df6?auto=format&fit=crop&w=1400&q=80" class="object-center object-cover">\n</div>\n')],-1),C=o('<h3 id="configuration"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h3><p>Configure the <code>@sui/tailwind-plugins/aspect-ratios</code> plugin using <code>theme</code> options.</p><div class="language-js"><pre><code>theme<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Completely override the aspect ratios</span>\n    aspectRatio<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token number">1</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>\n        <span class="token number">2</span><span class="token operator">:</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span>\n        <span class="token number">3</span><span class="token operator">:</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span>\n        <span class="token number">4</span><span class="token operator">:</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span>\n        <span class="token number">6</span><span class="token operator">:</span> <span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span>\n        <span class="token number">9</span><span class="token operator">:</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span>\n        <span class="token number">21</span><span class="token operator">:</span> <span class="token string">&#39;21&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n    <span class="token comment">// Add responsive and hover variants</span>\n    variants<span class="token operator">:</span> <span class="token punctuation">{</span>\n        aspectRatio<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;responsive&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hover&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre></div>',3);l.render=function(o,p,c,i,l,R){const S=a("code-preview");return s(),e("div",null,[r,n(S,{heading:"Images - 21x6"},{default:t((()=>[d])),_:1}),u,n(S,{heading:"Images with object constraints"},{default:t((()=>[h])),_:1}),g,m,n(S,{heading:"Background Images - 21x4"},{default:t((()=>[f])),_:1}),k,n(S,{heading:"Video - 16x9"},{default:t((()=>[v])),_:1}),b,_,n(S,{heading:"21:9"},{default:t((()=>[w])),_:1}),n(S,{heading:"16:9"},{default:t((()=>[x])),_:1}),n(S,{heading:"4:3"},{default:t((()=>[y])),_:1}),n(S,{heading:"1:1"},{default:t((()=>[q])),_:1}),T,j,n(S,{heading:"Mobile no aspect ratio"},{default:t((()=>[A])),_:1}),n(S,{heading:"Desktop no aspect ratio"},{default:t((()=>[I])),_:1}),C])};export{i as __pageData,l as default};
