import{r as n,o as a,c as e,b as s,w as i,a as o,d as t,e as d}from"./app.a3b816ba.js";const l='{"title":"Layout","description":"","frontmatter":{},"headers":[{"level":2,"title":"Containers","slug":"containers"},{"level":2,"title":"CSS Grid","slug":"css-grid"}],"relativePath":"framework/layout.md","lastUpdated":1628866979606}',r={},c=o('<h1>Layout</h1><h2 id="containers"><a class="header-anchor" href="#containers" aria-hidden="true">#</a> Containers</h2><p>We use the <a href="https://tailwindcss.com/docs/container" target="_blank" rel="noopener noreferrer">Tailwind</a> container for a fixed-width container that &quot;snaps&quot; to each breakpoint. This is in contrast to a &quot;fluid&quot; container that stretches to the full width of the outer container. We find in practice developing to specific breakpoints to be far more efficient than ensuring layout looks perfect at every pixel increment ðŸ˜….</p><div class="language-js"><pre><code>container<span class="token operator">:</span> <span class="token punctuation">{</span>\n    center<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    padding<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token constant">DEFAULT</span><span class="token operator">:</span> <span class="token string">&#39;1rem&#39;</span><span class="token punctuation">,</span>\n        md<span class="token operator">:</span> <span class="token string">&#39;2rem&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre></div><p>Our default setup is to auto-center the container, providing a <code>1rem</code> x-padding and a <code>2rem</code> padding after the <code>md</code> breakpoint. Feel free to tailor this to your needs for each project.</p>',5),p=t("pre",null,[t("code",null,'<div class="container">\n    ...\n</div>\n')],-1),u=t("p",null,"You can also override the padding or any other classes at the template level.",-1),v=t("pre",null,[t("code",null,'<div class="container px-20">\n    ...\n</div>\n')],-1),h=t("p",null,[d("If you want to use a fluid container, simply omit the "),t("code",null,".container"),d(" class and roll your own classes.")],-1),g=t("pre",null,[t("code",null,'<div class="w-full mx-auto px-4 md:px-8">\n    ...\n</div>\n')],-1),f=t("h2",{id:"css-grid"},[t("a",{class:"header-anchor",href:"#css-grid","aria-hidden":"true"},"#"),d(" CSS Grid")],-1),m=t("p",null,[d("An alternative to using a Flexbox-based grid is to use CSS Grid's, made easier with Tailwind's "),t("a",{href:"https://tailwindcss.com/docs/grid-template-columns",target:"_blank",rel:"noopener noreferrer"},"grid classes"),d(".")],-1),k=t("pre",null,[t("code",null,'<div class="container">\n    <div class="grid grid-cols-3 gap-x-8 gap-y-4">\n        <div>1</div>\n        <div>2</div>\n        <div>3</div>\n        <div>4</div>\n        <div>5</div>\n        <div>6</div>\n    </div>\n</div>\n')],-1),b=t("p",null,"The grid utilities make it super-simple to construct gaps between columns and rows, having columns span multiple rows and more.",-1),w=t("pre",null,[t("code",null,'<div class="container">\n    <div class="grid grid-cols-3 gap-4">\n        <div>1</div>\n        <div>2</div>\n        <div>3</div>\n        <div class="col-span-2">4</div>\n        <div>5</div>\n        <div class="col-span-3">6</div>\n    </div>\n</div>\n')],-1),_=t("pre",null,[t("code",null,'<div class="container">\n    <div class="grid grid-cols-6 gap-4">\n        <div class="col-start-2 col-span-4">1</div>\n        <div class="col-start-1 col-end-3">2</div>\n        <div class="col-end-7 col-span-2">3</div>\n        <div class="col-start-1 col-end-7">4</div>\n    </div>\n</div>\n')],-1),y=t("p",null,"You can also add some non-card-like grids, like the layout for an application with a sidebar.",-1),x=t("pre",null,[t("code",null,'<div class="container">\n    <div class="grid grid-rows-3 grid-flow-col gap-4">\n        <div class="row-span-3">1</div>\n        <div class="col-span-2">2</div>\n        <div class="row-span-2 col-span-2">3</div>\n    </div>\n</div>\n')],-1);r.render=function(o,t,d,l,r,T){const S=n("code-preview");return a(),e("div",null,[c,s(S,{"body-id":"container-example",heading:"Default container"},{default:i((()=>[p])),_:1}),u,s(S,{"body-id":"container-example",heading:"Custom classes"},{default:i((()=>[v])),_:1}),h,s(S,{"body-id":"container-example",heading:"Fluid container"},{default:i((()=>[g])),_:1}),f,m,s(S,{"body-id":"col-example",heading:"Grid"},{default:i((()=>[k])),_:1}),b,s(S,{"body-id":"col-example",heading:"Grid cols"},{default:i((()=>[w])),_:1}),s(S,{"body-id":"col-example",heading:"Grid cols - start/end"},{default:i((()=>[_])),_:1}),y,s(S,{"body-id":"col-example",heading:"Grid sidebar"},{default:i((()=>[x])),_:1})])};export{l as __pageData,r as default};
